name: ci-release
on:
  release:
    types:
    - created
    - prereleased
jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      APP_VERSION: ${{ github.event.release.tag_name }}
    steps:
    - uses: actions/checkout@v2
      with:
        repository: eu-digital-green-certificates/dgca-app-core-android
        ref: main
        path: dgca-app-core-android
    - uses: actions/checkout@v2
      with:
        repository: eu-digital-green-certificates/dgc-certlogic-android
        ref: main
        path: dgc-certlogic-android
    - uses: actions/checkout@v2
      with:
        path: dgca-verifier-app-android
    - uses: actions/setup-java@v1
      with:
        java-version: 1.8
        distribution: adopt
    - uses: android-actions/setup-android@v2
    - uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
    - name: build
      working-directory: ./dgca-verifier-app-android
      run: |-
        ./gradlew --no-daemon build
    - name: sign-tst
      working-directory: ./dgca-verifier-app-android
      run: |-
        echo "${KEY_STORE_BASE64}" | base64 --decode > ./key.jks
        ZIPALIGN=${ANDROID_HOME}/build-tools/${BUILD_TOOLS_VERSION}/zipalign
        APKSIGNER=${ANDROID_HOME}/build-tools/${BUILD_TOOLS_VERSION}/apksigner
        ${ZIPALIGN} -c -v 4 ./app/build/outputs/apk/tst/release/app-tst-release-unsigned.apk
        ${APKSIGNER} sign \
        --ks ./key.jks \
        --ks-pass pass:${KEY_STORE_PASSWORD} \
        --ks-key-alias ${KEY_ALIAS} \
        --key-pass pass:${KEY_PASSWORD} \
        --out ./app/build/outputs/apk/tst/release/app-tst-release-signed.apk \
        ./app/build/outputs/apk/tst/release/app-tst-release-unsigned.apk
        ${APKSIGNER} verify ./app/build/outputs/apk/tst/release/app-tst-release-signed.apk
      env:
        BUILD_TOOLS_VERSION: 29.0.3
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        KEY_STORE_BASE64: ${{ secrets.KEY_STORE_BASE64 }}
        KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
    - name: sign-acc
      working-directory: ./dgca-verifier-app-android
      run: |-
        echo "${KEY_STORE_BASE64}" | base64 --decode > ./key.jks
        ZIPALIGN=${ANDROID_HOME}/build-tools/${BUILD_TOOLS_VERSION}/zipalign
        APKSIGNER=${ANDROID_HOME}/build-tools/${BUILD_TOOLS_VERSION}/apksigner
        ${ZIPALIGN} -c -v 4 ./app/build/outputs/apk/acc/release/app-acc-release-unsigned.apk
        ${APKSIGNER} sign \
        --ks ./key.jks \
        --ks-pass pass:${KEY_STORE_PASSWORD} \
        --ks-key-alias ${KEY_ALIAS} \
        --key-pass pass:${KEY_PASSWORD} \
        --out ./app/build/outputs/apk/acc/release/app-acc-release-signed.apk \
        ./app/build/outputs/apk/acc/release/app-acc-release-unsigned.apk
        ${APKSIGNER} verify ./app/build/outputs/apk/acc/release/app-acc-release-signed.apk
      env:
        BUILD_TOOLS_VERSION: 29.0.3
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        KEY_STORE_BASE64: ${{ secrets.KEY_STORE_BASE64 }}
        KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
    - name: assets
      working-directory: ./dgca-verifier-app-android
      run: |-
        gh release upload ${APP_VERSION} \
        --clobber \
        ./app/build/outputs/apk/tst/release/app-tst-release-signed.apk#app-tst-release-signed-${APP_VERSION}.apk
        gh release upload ${APP_VERSION} \
        --clobber \
        ./app/build/outputs/apk/acc/release/app-acc-release-signed.apk#app-acc-release-signed-${APP_VERSION}.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
